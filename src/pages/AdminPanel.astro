<script
  src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.4.1/jspdf.min.js"
  crossorigin="anonymous"></script>
<link
  rel="stylesheet"
  href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"
/>

<button id="js-upload-file">Enviar arquivo</button>
<div class="file-container">
  <div class="file-overlay"></div>
  <div class="file-wrapper">
    <input class="file-input" id="js-file-input" type="file" />
    <div class="file-content">
      <h1>Export PDF with a custom font</h1>
      <h2 class="subheader">using jsPDF plugin</h2>
      <div class="file-infos">
        <p class="file-icon">
          <i class="fas fa-folder-open fa-3x"></i><span class="icon-shadow"
          ></span>
          <div class="upload-text">
            <span class="has-drag">Drag & Drop your file here</span><span
              class="bold">OR</span
            ><span> <button>Click to upload</button></span>
          </div>
        </p>
      </div>
      <p class="file-name" id="js-file-name">No file selected</p>
    </div>

    <div style="width:100%;margin-left:-20px;">
        <br>
      <div>&nbsp;</div>
      <input
        type="button"
        value="Upload"
        onclick="readFile()"
      />
    </div>
  </div>
</div>

<style>
  @import url("https://fonts.googleapis.com/css?family=Rubik:300,300i,400,400i,500,500i,700,700i,900,900i&display=swap&subset=cyrillic");

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  :root {
    --overlay-color: rgba(0, 0, 0, 0.7);
    --dialog-color: white;
    --dialog-border-radius: 20px;
    --icon-color: rgba(73, 80, 87, 0.6);
    --dialog-padding: 20px;
    --drag-over-background: #e3e5e8;
  }
  body {
    background: #353353;
    padding: 0;
    height: 100vh;
    min-height: 100vh;
    font-family: "Rubik", sans-serif;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-flow: column;
    color: white;
  }
  .file-container {
    font-size: 13pt;
    color: #4d4d4d;
  }
  .file-container .file-overlay {
    position: fixed;
    width: 100vw;
    height: 100vh;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 10;
  }
  .file-container .file-wrapper {
    position: fixed;
    display: block;
    width: 30vw;
    height: 80vh;
    max-height: 500px;
    min-height: 400px;
    min-width: 400px;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: 30px auto;
    background-color: var(--dialog-color);
    z-index: 20;
    border-radius: var(--dialog-border-radius);
    padding: var(--dialog-padding);
    box-shadow: 3px 3px 15px 0px black;
  }
  .file-container .file-wrapper .file-input {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: #000;
    z-index: 10;
    cursor: pointer;
    opacity: 0;
  }
  .file-container .file-wrapper .file-input--active + .file-content {
    background: var(--drag-over-background);
  }
  .file-container .file-wrapper .file-input--active + .file-content .file-icon {
    opacity: 0.5;
  }
  .file-container
    .file-wrapper
    .file-input--active
    + .file-content
    .file-icon
    i {
    animation-name: bounce;
    animation-duration: 0.6s;
    animation-iteration-count: infinite;
    animation-timing-function: ease;
  }
  .file-container
    .file-wrapper
    .file-input--active
    + .file-content
    .file-icon
    .icon-shadow {
    animation-name: shrink;
    animation-duration: 0.6s;
    animation-iteration-count: infinite;
  }
  .file-container .file-wrapper .file-content {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: var(--dialog-border-radius);
    transition: 0.2s;
  }
  .file-container .file-wrapper .file-content .file-infos {
    position: absolute;
    display: flex;
    width: 80%;
    height: 50%;
    min-height: 202px;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    flex-direction: column;
    justify-content: center;
    margin: auto;
  }
  .file-container .file-wrapper .file-content .file-infos .file-icon {
    position: relative;
    width: 100%;
    height: 100%;
    margin: 0;
    color: var(--icon-color);
    background-color: #dcf9ff21;
    border-radius: var(--dialog-border-radius);
    padding: var(--dialog-padding);
    transition: 0.2s;
    border: dashed 2px #91c7d263;
  }
  .file-container .file-wrapper .file-content .file-infos .file-icon i {
    margin: 20px 0;
    width: 100%;
    color: #9a94ef;
  }
  .file-container
    .file-wrapper
    .file-content
    .file-infos
    .file-icon
    .icon-shadow {
    position: relative;
    display: block;
    width: 95px;
    height: 7px;
    border-radius: 100%;
    background-color: var(--drag-over-background);
    top: -17px;
    margin-left: auto;
    margin-right: auto;
  }
  .file-container .file-wrapper .file-content .file-infos .file-icon > span {
    position: absolute;
    bottom: var(--dialog-padding);
    width: calc(100% - var(--dialog-padding) * 2);
  }
  .file-container
    .file-wrapper
    .file-content
    .file-infos
    .file-icon
    > span
    span {
    display: none;
  }
  .file-container
    .file-wrapper
    .file-content
    .file-infos
    .file-icon
    > span
    .has-drag {
    display: inline;
  }
  .file-container .file-wrapper .file-content .file-infos .file-icon i,
  .file-container .file-wrapper .file-content .file-infos .file-icon span {
    display: block;
    text-align: center;
    text-transform: uppercase;
    font-weight: bold;
  }
  .file-container .file-wrapper .file-content .file-name {
    position: absolute;
    width: 100%;
    text-align: middle;
    left: 0;
    bottom: var(--dialog-padding);
    right: 0;
    font-weight: bold;
    font-size: 15pt;
    margin: auto;
    text-align: center;
  }
  @keyframes bounce {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-15px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  @keyframes shrink {
    0% {
      width: 95px;
    }
    50% {
      width: 75px;
    }
    100% {
      width: 95px;
    }
  }

  .upload-text {
    position: absolute;
    margin-top: 100px;
    display: flex;
    flex-flow: column;
    align-items: center;
    left: calc(50% - 59px);
    font-size: 10px;
    color: #b7b7b7;
  }

  .bold {
    font-weight: 500;
    margin: 5px 0;
    font-size: 12px;
    color: grey;
  }

  .upload-text button,
  input[type="button"] {
    padding: 8px 12px;
    border: 0;
    color: white;
    border-radius: 7px;
    background: #9a94ef;
    font-size: 12px;
  }

  input[type="button"] {
    background: #9a94ef;
    width: 100%;
    padding: 12px;
    min-width: 400px;
    width: 30vw;
  }

  h1 {
    font-size: 20px;
    text-align: center;
    font-weight: 500;
    padding: 15px 0 5px 0;
  }

  h2 {
    opacity: 0.5;
    font-weight: 300;
    text-align: center;
    font-size: 12px;
  }

  textarea {
    width: 100%;
    min-width: 400px;
    width: 30vw;
    margin: 0;
    border-radius: 20px;
    padding: 10px 10px 0 10px;
    font-family: "Rubik", sans-serif;
    color: grey;
  }
</style>

<script>
  var fontInBase64 = "",
    fileName = "",
    message = document.querySelector("div"),
    txtForPdf = document.querySelector("textarea"),
    errorStr = '<b style="color:red">Please select a font file!</b>';

  function readFile() {
    var file = document.querySelector("input[type=file]").files[0],
      reader = new FileReader();

    if (file && file.name.split(".")[1].toLowerCase() != "ttf") {
      message.innerHTML = errorStr;
      return;
    }

    if (txtForPdf.value.replace(/\s+/g, "").length < 1) {
      message.innerHTML = '<b style="color:red">Please write some Text!</b>';
      return;
    }

    reader.onloadend = function () {
      fontInBase64 = reader.result.split(",")[1];
      fileName = file.name.replace(/\s+/g, "-");

      createPDF(fileName, fontInBase64);
    };

    if (file) reader.readAsDataURL(file);
    else message.innerHTML = errorStr;
  }

  function createPDF(fileName, fontInBase64) {
    var doc = new jsPDF("p", "mm", "a4");
    (fileNameWithoutExtension = fileName.split(".")[0]),
      (lMargin = 15), // left margin in mm
      (rMargin = 15), // right margin in mm
      (pdfInMM = 210); // width of A4 in mm

    doc.addFileToVFS(fileName, fontInBase64);
    doc.addFont(fileName, fileNameWithoutExtension, "normal");

    doc.setFont(fileNameWithoutExtension);
    doc.setFontSize(14);
    var splitParts = doc.splitTextToSize(
      txtForPdf.value,
      pdfInMM - lMargin - rMargin
    );
    doc.text(15, 15, splitParts);

    doc.save("test.pdf");
  }

  (function () {
    window.supportDrag = (function () {
      let div = document.createElement("div");
      return (
        ("draggable" in div || ("ondragstart" in div && "ondrop" in div)) &&
        "FormData" in window &&
        "FileReader" in window
      );
    })();

    let input = document.getElementById("js-file-input");

    if (!supportDrag) {
      document.querySelectorAll(".has-drag")[0].classList.remove("has-drag");
    }

    input.addEventListener(
      "change",
      function (e) {
        document.getElementById("js-file-name").innerHTML = this.files[0].name;
        document
          .querySelectorAll(".file-input")[0]
          .classList.remove("file-input--active");
      },
      false
    );

    if (supportDrag) {
      input.addEventListener("dragenter", function (e) {
        document
          .querySelectorAll(".file-input")[0]
          .classList.add("file-input--active");
      });

      input.addEventListener("dragleave", function (e) {
        document
          .querySelectorAll(".file-input")[0]
          .classList.remove("file-input--active");
      });
    }
  })();
</script>
